{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"H:\\\\Projets\\\\Shoki_work\\\\shokiApp\\\\client\\\\pages\\\\index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from 'axios';\n\naxios: {\n  credentials: true;\n}\n\nfunction SearchResults() {\n  var _useState = useState('react'),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState('react'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      query = _useState4[0],\n      setQuery = _useState4[1];\n\n  useEffect(function () {\n    var ignore = false;\n\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n\n    function _fetchData() {\n      _fetchData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // const result = await axios('https://hn.algolia.com/api/v1/search?query=' + query);\n                axios.defaults.withCredentials = true;\n                _context.next = 3;\n                return axios('http://localhost:8083/getTA?query=' + query);\n\n              case 3:\n                result = _context.sent;\n                // const result = await axios('localhost:8083/getTA/' + query);\n                axios.defaults.withCredentials = true;\n                if (!ignore) setData(result.data);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchData.apply(this, arguments);\n    }\n\n    fetchData();\n    return function () {\n      ignore = true;\n    };\n  }, [query]);\n  return React.createElement(React.Fragment, null, React.createElement(\"input\", {\n    name: \"url_name\",\n    value: query,\n    onChange: function onChange(e) {\n      return setQuery(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"button\",\n    value: \"Quick search !\",\n    onClick: function onClick(e) {\n      return setQuery(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Number of comments : \", data.Nb_comments, \"Rating : \", data.Rating));\n} // const rootElement = document.getElementById(\"root\");\n// ReactDOM.render(<SearchResults />, rootElement);\n\n\nexport default SearchResults;","map":{"version":3,"sources":["H:\\Projets\\Shoki_work\\shokiApp\\client\\pages\\index.js"],"names":["React","useState","useEffect","ReactDOM","axios","credentials","SearchResults","data","setData","query","setQuery","ignore","fetchData","defaults","withCredentials","result","e","target","value","Nb_comments","Rating"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACAA,KAAK,EAAE;AACLC,EAAAA,WAAW,EAAE;AACd;;AACD,SAASC,aAAT,GAAyB;AAAA,kBACCL,QAAQ,CAAC,OAAD,CADT;AAAA;AAAA,MAChBM,IADgB;AAAA,MACVC,OADU;;AAAA,mBAEGP,QAAQ,CAAC,OAAD,CAFX;AAAA;AAAA,MAEhBQ,KAFgB;AAAA,MAETC,QAFS;;AAIvBR,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIS,MAAM,GAAG,KAAb;;AADc,aAGCC,SAHD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,+BAGd;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AACAR,gBAAAA,KAAK,CAACS,QAAN,CAAeC,eAAf,GAAiC,IAAjC;AAFF;AAAA,uBAGuBV,KAAK,CAAC,uCAAqCK,KAAtC,CAH5B;;AAAA;AAGQM,gBAAAA,MAHR;AAIE;AACAX,gBAAAA,KAAK,CAACS,QAAN,CAAeC,eAAf,GAAiC,IAAjC;AACA,oBAAI,CAACH,MAAL,EAAaH,OAAO,CAACO,MAAM,CAACR,IAAR,CAAP;;AANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHc;AAAA;AAAA;;AAYdK,IAAAA,SAAS;AACT,WAAO,YAAM;AAAED,MAAAA,MAAM,GAAG,IAAT;AAAgB,KAA/B;AACD,GAdQ,EAcN,CAACF,KAAD,CAdM,CAAT;AAgBA,SACE,0CACE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,KAAK,EAAEA,KAA9B;AAAqC,IAAA,QAAQ,EAAE,kBAAAO,CAAC;AAAA,aAAIN,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AAAA,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,gBAA3B;AAA4C,IAAA,OAAO,EAAE,iBAAAF,CAAC;AAAA,aAAIN,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AAAA,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAC4BX,IAAI,CAACY,WADjC,eAEgBZ,IAAI,CAACa,MAFrB,CAHF,CADF;AAUD,C,CAED;AACA;;;AACA,eAAed,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport axios from 'axios';\r\naxios: {\r\n  credentials: true\r\n}\r\nfunction SearchResults() {\r\n  const [data, setData] = useState('react');\r\n  const [query, setQuery] = useState('react');\r\n\r\n  useEffect(() => {\r\n    let ignore = false;\r\n\r\n    async function fetchData() {\r\n      // const result = await axios('https://hn.algolia.com/api/v1/search?query=' + query);\r\n      axios.defaults.withCredentials = true;\r\n      const result = await axios('http://localhost:8083/getTA?query='+query);\r\n      // const result = await axios('localhost:8083/getTA/' + query);\r\n      axios.defaults.withCredentials = true;\r\n      if (!ignore) setData(result.data);\r\n    }\r\n\r\n    fetchData();\r\n    return () => { ignore = true; }\r\n  }, [query]);\r\n\r\n  return (\r\n    <>\r\n      <input name=\"url_name\" value={query} onChange={e => setQuery(e.target.value)} />\r\n      <input type=\"button\" value=\"Quick search !\" onClick={e => setQuery(e.target.value)} />\r\n      <div>\r\n            Number of comments : {data.Nb_comments}\r\n            Rating : {data.Rating}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n// const rootElement = document.getElementById(\"root\");\r\n// ReactDOM.render(<SearchResults />, rootElement);\r\nexport default SearchResults;\r\n"]},"metadata":{},"sourceType":"module"}