{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"H:\\\\Projets\\\\Shoki_work\\\\shokiApp\\\\client\\\\pages\\\\index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from 'axios';\n\nfunction SearchResults() {\n  var _useState = useState('none'),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState('https://www.tripadvisor.fr/Restaurant_Review-g60763-d1236281-Reviews-Club_A_Steakhouse-New_York_City_New_York.html'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      query = _useState4[0],\n      setQuery = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      search = _useState6[0],\n      setSearch = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isLoading = _useState8[0],\n      setIsLoading = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isError = _useState10[0],\n      setIsError = _useState10[1];\n\n  useEffect(function () {\n    var ignore = false;\n\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n\n    function _fetchData() {\n      _fetchData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setIsError(false);\n                setIsLoading(true);\n                _context.prev = 2;\n                _context.next = 5;\n                return axios.get('http://localhost:8083/getTA?url_name=' + query, _JSON$stringify({\n                  data: 'data'\n                }));\n\n              case 5:\n                result = _context.sent;\n                if (!ignore) setData(result.data);\n                setIsLoading(false);\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](2);\n                setIsError(true);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 10]]);\n      }));\n      return _fetchData.apply(this, arguments);\n    }\n\n    fetchData();\n    return function () {\n      ignore = true;\n    };\n  }, [search]);\n  return React.createElement(\"div\", {\n    position: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: \"url_name\",\n    value: query,\n    onChange: function onChange(e) {\n      return setQuery(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"button\",\n    value: \"Quick search !\",\n    onClick: function onClick() {\n      return setSearch(query);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), isError && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Error : Couldn't find informations on this page.\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Number of comments :\", isLoading ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Loading ...\") : React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, data.Nb_comments)), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Rating : \", isLoading ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Loading ...\") : React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, data.Rating)))));\n} // const rootElement = document.getElementById(\"root\");\n// ReactDOM.render(<SearchResults />, rootElement);\n\n\nexport default SearchResults;","map":{"version":3,"sources":["H:\\Projets\\Shoki_work\\shokiApp\\client\\pages\\index.js"],"names":["React","useState","useEffect","ReactDOM","axios","SearchResults","data","setData","query","setQuery","search","setSearch","isLoading","setIsLoading","isError","setIsError","ignore","fetchData","get","result","e","target","value","Nb_comments","Rating"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport axios from 'axios';\r\n\r\n\r\nfunction SearchResults() {\r\n  const [data, setData] = useState('none');\r\n  const [query, setQuery] = useState('https://www.tripadvisor.fr/Restaurant_Review-g60763-d1236281-Reviews-Club_A_Steakhouse-New_York_City_New_York.html');\r\n  const [search, setSearch] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let ignore = false;\r\n    async function fetchData() {\r\n      setIsError(false);\r\n      setIsLoading(true);\r\n      try {\r\n        const result = await axios.get('http://localhost:8083/getTA?url_name='+query,\r\n          JSON.stringify({ data: 'data' }));\r\n        if (!ignore) setData(result.data);\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        setIsError(true);\r\n      }\r\n\r\n    }\r\n\r\n    fetchData();\r\n    return () => { ignore = true; }\r\n  }, [search]);\r\n\r\n  return (\r\n    <div position=\"center\">\r\n    <div>\r\n      <input name=\"url_name\" value={query} onChange={e => setQuery(e.target.value)} />\r\n</div><div>\r\n      <input type=\"button\" value=\"Quick search !\" onClick={() => setSearch(query)} />\r\n</div>\r\n      {isError && <div>Error : Couldn't find informations on this page.</div>}\r\n\r\n      <div>\r\n      <ul>\r\n        <li>\r\n            Number of comments :\r\n            {isLoading ? (\r\n              <span>Loading ...</span>\r\n            ) : (<span>{data.Nb_comments}</span>)}\r\n          </li><li>\r\n            Rating : {isLoading ? (\r\n                <span>Loading ...</span>\r\n              ) : (<span>{data.Rating}</span>)}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// const rootElement = document.getElementById(\"root\");\r\n// ReactDOM.render(<SearchResults />, rootElement);\r\nexport default SearchResults;\r\n"]},"metadata":{},"sourceType":"module"}